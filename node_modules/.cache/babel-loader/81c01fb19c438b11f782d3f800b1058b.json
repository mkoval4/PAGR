{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport isString from 'lodash/isString';\nimport invoke from 'lodash/invoke';\nimport React from 'react';\nimport { Form, Icon, Popup, Transition } from 'semantic-ui-react';\nimport checkIE from '../lib/checkIE';\nvar popupStyle = {\n  padding: '0',\n  filter: 'none'\n};\n\nvar FormInputWithRef =\n/** @class */\nfunction (_super) {\n  __extends(FormInputWithRef, _super);\n\n  function FormInputWithRef() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  FormInputWithRef.prototype.render = function () {\n    var _a = this.props,\n        value = _a.value,\n        clearable = _a.clearable,\n        icon = _a.icon,\n        clearIcon = _a.clearIcon,\n        onClear = _a.onClear,\n        innerRef = _a.innerRef,\n        onFocus = _a.onFocus,\n        onBlur = _a.onBlur,\n        onMouseEnter = _a.onMouseEnter,\n        rest = __rest(_a, [\"value\", \"clearable\", \"icon\", \"clearIcon\", \"onClear\", \"innerRef\", \"onFocus\", \"onBlur\", \"onMouseEnter\"]);\n\n    var ClearIcon = isString(clearIcon) ? React.createElement(Icon, {\n      name: clearIcon,\n      link: true,\n      onClick: onClear\n    }) : React.createElement(clearIcon.type, __assign({}, clearIcon.props, {\n      link: true,\n      onClick: onClear\n    }));\n    return React.createElement(Form.Input, __assign({\n      onFocus: onFocus,\n      onBlur: onBlur,\n      onClick: onFocus,\n      onMouseEnter: onMouseEnter,\n      icon: true\n    }, rest), value && clearable ? ClearIcon : React.createElement(Icon, {\n      name: icon\n    }), React.createElement(\"input\", {\n      ref: innerRef,\n      value: value\n    }));\n  };\n\n  return FormInputWithRef;\n}(React.Component);\n\nvar InputView =\n/** @class */\nfunction (_super) {\n  __extends(InputView, _super);\n\n  function InputView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.scrollListener = function () {\n      var closePopup = _this.props.closePopup;\n      closePopup();\n    };\n\n    return _this;\n  }\n\n  InputView.prototype.render = function () {\n    var _this = this;\n\n    var _a = this.props,\n        renderPicker = _a.renderPicker,\n        popupPosition = _a.popupPosition,\n        inline = _a.inline,\n        value = _a.value,\n        closeOnMouseLeave = _a.closeOnMouseLeave,\n        onChange = _a.onChange,\n        _onClear = _a.onClear,\n        children = _a.children,\n        inlineLabel = _a.inlineLabel,\n        popupIsClosed = _a.popupIsClosed,\n        mountNode = _a.mountNode,\n        tabIndex = _a.tabIndex,\n        onMount = _a.onMount,\n        closePopup = _a.closePopup,\n        openPopup = _a.openPopup,\n        animation = _a.animation,\n        duration = _a.duration,\n        pickerWidth = _a.pickerWidth,\n        pickerStyle = _a.pickerStyle,\n        iconPosition = _a.iconPosition,\n        icon = _a.icon,\n        readOnly = _a.readOnly,\n        rest = __rest(_a, [\"renderPicker\", \"popupPosition\", \"inline\", \"value\", \"closeOnMouseLeave\", \"onChange\", \"onClear\", \"children\", \"inlineLabel\", \"popupIsClosed\", \"mountNode\", \"tabIndex\", \"onMount\", \"closePopup\", \"openPopup\", \"animation\", \"duration\", \"pickerWidth\", \"pickerStyle\", \"iconPosition\", \"icon\", \"readOnly\"]);\n\n    var onBlur = function onBlur(e) {\n      if (e.relatedTarget !== _this.popupNode && e.relatedTarget !== _this.inputNode && !checkIE()) {\n        closePopup();\n      }\n    };\n\n    var onMouseLeave = function onMouseLeave(e) {\n      if (e.relatedTarget !== _this.popupNode && e.relatedTarget !== _this.inputNode) {\n        if (closeOnMouseLeave) {\n          _this.mouseLeaveTimeout = window.setTimeout(function () {\n            if (_this.mouseLeaveTimeout) {\n              closePopup();\n            }\n          }, 500);\n        }\n      }\n    };\n\n    var onMouseEnter = function onMouseEnter(e) {\n      if (e.currentTarget === _this.popupNode || e.currentTarget === _this.inputNode) {\n        if (closeOnMouseLeave) {\n          clearTimeout(_this.mouseLeaveTimeout);\n          _this.mouseLeaveTimeout = null;\n        }\n      }\n    };\n\n    var inputElement = React.createElement(FormInputWithRef, __assign({}, rest, {\n      readOnly: readOnly,\n      icon: icon,\n      iconPosition: icon && iconPosition !== 'right' ? iconPosition : undefined,\n      innerRef: function innerRef(e) {\n        _this.inputNode = e;\n        onMount(e);\n      },\n      value: value,\n      tabIndex: tabIndex,\n      inline: inlineLabel,\n      onClear: function onClear(e) {\n        return (_onClear || onChange)(e, __assign({}, rest, {\n          value: ''\n        }));\n      },\n      onFocus: function onFocus(e) {\n        invoke(_this.props, 'onFocus', e, _this.props);\n        openPopup();\n      },\n      onBlur: onBlur,\n      onMouseEnter: onMouseEnter,\n      onChange: onChange\n    }));\n\n    if (inline) {\n      return renderPicker();\n    }\n\n    return React.createElement(React.Fragment, null, inputElement, !readOnly && React.createElement(Transition, {\n      unmountOnHide: true,\n      mountOnShow: true,\n      visible: !popupIsClosed,\n      animation: animation,\n      duration: duration,\n      onComplete: function onComplete() {\n        if (popupIsClosed) {\n          _this.unsetScrollListener(); // TODO: for some reason sometimes transition component\n          // doesn't hide even though `popupIsClosed === true`\n          // To hide it we need to rerender component\n\n\n          _this.forceUpdate();\n        } else {\n          _this.setScrollListener();\n        }\n      }\n    }, React.createElement(Popup, {\n      position: popupPosition,\n      open: true,\n      hoverable: closeOnMouseLeave,\n      flowing: true,\n      style: popupStyle,\n      context: this.inputNode,\n      on: 'hover',\n      mountNode: mountNode\n    }, React.createElement(\"div\", {\n      onBlur: onBlur,\n      onMouseLeave: onMouseLeave,\n      onMouseEnter: onMouseEnter,\n      style: {\n        outline: 'none'\n      },\n      tabIndex: 0,\n      ref: function ref(_ref) {\n        return _this.popupNode = _ref;\n      }\n    }, renderPicker()))));\n  };\n\n  InputView.prototype.setScrollListener = function () {\n    window.addEventListener('scroll', this.scrollListener);\n  };\n\n  InputView.prototype.unsetScrollListener = function () {\n    window.removeEventListener('scroll', this.scrollListener);\n  };\n\n  InputView.defaultProps = {\n    inline: false,\n    closeOnMouseLeave: true,\n    tabIndex: '0',\n    clearable: false,\n    clearIcon: 'remove',\n    animation: 'scale',\n    duration: 200,\n    iconPosition: 'right'\n  };\n  return InputView;\n}(React.Component);\n\nexport default InputView;","map":null,"metadata":{},"sourceType":"module"}