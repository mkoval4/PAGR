{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\gmaks\\\\Desktop\\\\project\\\\hci-pagr.github.io\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\Users\\\\gmaks\\\\Desktop\\\\project\\\\hci-pagr.github.io\\\\src\\\\containers\\\\data\\\\WithCategories.js\";\nimport React from \"react\";\nimport faker from \"faker\";\nvar loaded = false;\nvar categoryList = [];\nvar nextCategoryId = 0;\nvar localstorageKey = 'category-data';\nvar dataVersion = 2;\n\nvar generate = function generate() {\n  var category = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  nextCategoryId += 1;\n  return _objectSpread({\n    id: nextCategoryId\n  }, category);\n};\n\nvar seed = function seed() {\n  categoryList.push(generate({\n    name: 'Low'\n  }));\n  categoryList.push(generate({\n    name: 'Medium'\n  }));\n  categoryList.push(generate({\n    name: 'High'\n  }));\n};\n\nvar saveState = function saveState() {\n  localStorage.setItem(localstorageKey, JSON.stringify({\n    dataVersion: dataVersion,\n    nextCategoryId: nextCategoryId,\n    categoryList: categoryList\n  }));\n};\n\nvar loadCategoryData = function loadCategoryData() {\n  if (loaded) {\n    return;\n  }\n\n  if (localStorage.getItem(localstorageKey)) {\n    var _JSON$parse = JSON.parse(localStorage.getItem(localstorageKey)),\n        lsDataVersion = _JSON$parse.dataVersion,\n        lsNextCategoryId = _JSON$parse.nextCategoryId,\n        lsCategoryList = _JSON$parse.categoryList;\n\n    if (dataVersion === lsDataVersion) {\n      loaded = true;\n      nextCategoryId = lsNextCategoryId;\n      categoryList = lsCategoryList;\n      return;\n    }\n  }\n\n  seed();\n  saveState();\n  loaded = true;\n};\n\nvar WithCategorys = function WithCategorys(WrappedComponent) {\n  loadCategoryData();\n  return function (props) {\n    return React.createElement(WrappedComponent, Object.assign({}, props, {\n      categories: categoryList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }));\n  };\n};\n\nexport var random = function random() {\n  loadCategoryData();\n  return faker.random.arrayElement(categoryList);\n};\nexport default WithCategorys;","map":{"version":3,"sources":["C:\\Users\\gmaks\\Desktop\\project\\hci-pagr.github.io\\src\\containers\\data\\WithCategories.js"],"names":["React","faker","loaded","categoryList","nextCategoryId","localstorageKey","dataVersion","generate","category","id","seed","push","name","saveState","localStorage","setItem","JSON","stringify","loadCategoryData","getItem","parse","lsDataVersion","lsNextCategoryId","lsCategoryList","WithCategorys","WrappedComponent","props","random","arrayElement"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,IAAIC,MAAM,GAAG,KAAb;AACA,IAAIC,YAAY,GAAG,EAAnB;AACA,IAAIC,cAAc,GAAG,CAArB;AAEA,IAAMC,eAAe,GAAG,eAAxB;AAEA,IAAMC,WAAW,GAAG,CAApB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAmB;AAAA,MAAlBC,QAAkB,uEAAP,EAAO;AAChCJ,EAAAA,cAAc,IAAI,CAAlB;AACA;AACIK,IAAAA,EAAE,EAAEL;AADR,KAEOI,QAFP;AAIH,CAND;;AAQA,IAAME,IAAI,GAAG,SAAPA,IAAO,GAAM;AACfP,EAAAA,YAAY,CAACQ,IAAb,CAAkBJ,QAAQ,CAAC;AAACK,IAAAA,IAAI,EAAE;AAAP,GAAD,CAA1B;AACAT,EAAAA,YAAY,CAACQ,IAAb,CAAkBJ,QAAQ,CAAC;AAACK,IAAAA,IAAI,EAAE;AAAP,GAAD,CAA1B;AACAT,EAAAA,YAAY,CAACQ,IAAb,CAAkBJ,QAAQ,CAAC;AAACK,IAAAA,IAAI,EAAE;AAAP,GAAD,CAA1B;AACH,CAJD;;AAMA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AACpBC,EAAAA,YAAY,CAACC,OAAb,CAAqBV,eAArB,EAAsCW,IAAI,CAACC,SAAL,CAAe;AACjDX,IAAAA,WAAW,EAAXA,WADiD;AAEjDF,IAAAA,cAAc,EAAdA,cAFiD;AAGjDD,IAAAA,YAAY,EAAZA;AAHiD,GAAf,CAAtC;AAKH,CAND;;AAQA,IAAMe,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC3B,MAAIhB,MAAJ,EAAY;AACR;AACH;;AAED,MAAIY,YAAY,CAACK,OAAb,CAAqBd,eAArB,CAAJ,EAA2C;AAAA,sBAKnCW,IAAI,CAACI,KAAL,CAAWN,YAAY,CAACK,OAAb,CAAqBd,eAArB,CAAX,CALmC;AAAA,QAEtBgB,aAFsB,eAEnCf,WAFmC;AAAA,QAGnBgB,gBAHmB,eAGnClB,cAHmC;AAAA,QAIrBmB,cAJqB,eAInCpB,YAJmC;;AAOvC,QAAIG,WAAW,KAAKe,aAApB,EAAmC;AAC/BnB,MAAAA,MAAM,GAAG,IAAT;AACAE,MAAAA,cAAc,GAAGkB,gBAAjB;AACAnB,MAAAA,YAAY,GAAGoB,cAAf;AACA;AACH;AACJ;;AAEDb,EAAAA,IAAI;AACJG,EAAAA,SAAS;AACTX,EAAAA,MAAM,GAAG,IAAT;AACH,CAvBD;;AAyBA,IAAMsB,aAAa,GAAG,SAAhBA,aAAgB,CAACC,gBAAD,EAAsB;AACxCP,EAAAA,gBAAgB;AAEhB,SAAO,UAAAQ,KAAK;AAAA,WACR,oBAAC,gBAAD,oBAAsBA,KAAtB;AAA6B,MAAA,UAAU,EAAEvB,YAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADQ;AAAA,GAAZ;AAGH,CAND;;AAQA,OAAO,IAAMwB,MAAM,GAAG,SAATA,MAAS,GAAM;AACxBT,EAAAA,gBAAgB;AAEhB,SAAOjB,KAAK,CAAC0B,MAAN,CAAaC,YAAb,CAA0BzB,YAA1B,CAAP;AACH,CAJM;AAMP,eAAeqB,aAAf","sourcesContent":["import React from \"react\";\r\nimport faker from \"faker\";\r\n\r\nlet loaded = false;\r\nlet categoryList = [];\r\nlet nextCategoryId = 0;\r\n\r\nconst localstorageKey = 'category-data';\r\n\r\nconst dataVersion = 2;\r\n\r\nconst generate = (category = {}) => {\r\n    nextCategoryId += 1;\r\n    return {\r\n        id: nextCategoryId,\r\n        ...category\r\n    };\r\n};\r\n\r\nconst seed = () => {\r\n    categoryList.push(generate({name: 'Low'}));\r\n    categoryList.push(generate({name: 'Medium'}));\r\n    categoryList.push(generate({name: 'High'}));\r\n};\r\n\r\nconst saveState = () => {\r\n    localStorage.setItem(localstorageKey, JSON.stringify({\r\n        dataVersion,\r\n        nextCategoryId,\r\n        categoryList\r\n    }))\r\n};\r\n\r\nconst loadCategoryData = () => {\r\n    if (loaded) {\r\n        return;\r\n    }\r\n\r\n    if (localStorage.getItem(localstorageKey)) {\r\n        const {\r\n            dataVersion: lsDataVersion,\r\n            nextCategoryId: lsNextCategoryId,\r\n            categoryList: lsCategoryList\r\n        } = JSON.parse(localStorage.getItem(localstorageKey))\r\n\r\n        if (dataVersion === lsDataVersion) {\r\n            loaded = true;\r\n            nextCategoryId = lsNextCategoryId;\r\n            categoryList = lsCategoryList;\r\n            return;\r\n        }\r\n    }\r\n\r\n    seed();\r\n    saveState();\r\n    loaded = true;\r\n};\r\n\r\nconst WithCategorys = (WrappedComponent) => {\r\n    loadCategoryData();\r\n\r\n    return props => (\r\n        <WrappedComponent {...props} categories={categoryList} />\r\n    )\r\n}\r\n\r\nexport const random = () => {\r\n    loadCategoryData();\r\n\r\n    return faker.random.arrayElement(categoryList);\r\n}\r\n\r\nexport default WithCategorys;\r\n"]},"metadata":{},"sourceType":"module"}