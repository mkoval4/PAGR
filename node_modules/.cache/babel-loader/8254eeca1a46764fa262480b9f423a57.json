{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\gmaks\\\\Desktop\\\\project\\\\hci-pagr.github.io\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\gmaks\\\\Desktop\\\\project\\\\hci-pagr.github.io\\\\src\\\\containers\\\\Calendar.js\";\nimport React, { useState } from \"react\";\nimport { Container, Header } from \"semantic-ui-react\";\nimport FullCalendar from 'fullcalendar-reactwrapper';\nimport 'fullcalendar-reactwrapper/dist/css/fullcalendar.min.css';\nimport WithTasks from \"./data/WithTasks\";\nimport moment from \"moment\";\nimport EditTaskModal from \"../components/tasks/EditTaskModal\";\nimport '../styles/calendar.scss';\nimport ViewTaskModal from \"../components/tasks/ViewTaskModal\";\n\nvar Calendar = function Calendar(_ref) {\n  var tasks = _ref.allTasks,\n      updateTask = _ref.updateTask;\n  var events = tasks.map(function (_ref2) {\n    var id = _ref2.id,\n        name = _ref2.name,\n        dueDate = _ref2.dueDate,\n        priority = _ref2.priority;\n    return {\n      id: id,\n      title: name,\n      start: moment(dueDate).format('YYYY-MM-DD'),\n      allDay: true,\n      backgroundColor: priority === 1 ? '#db2828' : priority === 2 ? '#fbbd08' : '#767676',\n      borderColor: priority === 1 ? '#db2828' : priority === 2 ? '#fbbd08' : '#767676',\n      priority: priority\n    };\n  });\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      openViewTaskId = _useState2[0],\n      setOpenViewTaskId = _useState2[1];\n\n  var openViewTask = openViewTaskId ? tasks.find(function (t) {\n    return t.id === openViewTaskId;\n  }) : false;\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      openEditTaskId = _useState4[0],\n      setOpenEditTaskId = _useState4[1];\n\n  var openEditTask = openEditTaskId ? tasks.find(function (t) {\n    return t.id === openEditTaskId;\n  }) : false;\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(Container, {\n    text: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(Header, {\n    as: \"h1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Calendar\")), React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, openViewTask && React.createElement(ViewTaskModal, {\n    task: openViewTask,\n    onCloseClicked: function onCloseClicked() {\n      return setOpenViewTaskId(false);\n    },\n    onEditClicked: function onEditClicked() {\n      setOpenViewTaskId(false);\n      setOpenEditTaskId(openViewTaskId);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), openEditTask && React.createElement(EditTaskModal, {\n    task: openEditTask,\n    updateTask: updateTask,\n    onCloseClicked: function onCloseClicked() {\n      return setOpenEditTaskId(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(FullCalendar, {\n    id: \"your-custom-ID\",\n    header: {\n      left: 'prev,next today',\n      center: 'title',\n      right: 'month,basicWeek,basicDay'\n    },\n    defaultView: \"basicWeek\",\n    navLinks: true // can click day/week names to navigate views\n    ,\n    editable: false,\n    eventLimit: false // allow \"more\" link when too many events\n    ,\n    eventClick: function eventClick(_ref3) {\n      var id = _ref3.id;\n      setOpenViewTaskId(id);\n    },\n    events: events,\n    eventOrder: \"priority,title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  })));\n};\n\nexport default WithTasks(Calendar);","map":{"version":3,"sources":["C:\\Users\\gmaks\\Desktop\\project\\hci-pagr.github.io\\src\\containers\\Calendar.js"],"names":["React","useState","Container","Header","FullCalendar","WithTasks","moment","EditTaskModal","ViewTaskModal","Calendar","tasks","allTasks","updateTask","events","map","id","name","dueDate","priority","title","start","format","allDay","backgroundColor","borderColor","openViewTaskId","setOpenViewTaskId","openViewTask","find","t","openEditTaskId","setOpenEditTaskId","openEditTask","left","center","right"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\r\nimport {Container, Header} from \"semantic-ui-react\";\r\nimport FullCalendar from 'fullcalendar-reactwrapper';\r\nimport 'fullcalendar-reactwrapper/dist/css/fullcalendar.min.css'\r\nimport WithTasks from \"./data/WithTasks\";\r\nimport moment from \"moment\";\r\nimport EditTaskModal from \"../components/tasks/EditTaskModal\";\r\nimport '../styles/calendar.scss'\r\nimport ViewTaskModal from \"../components/tasks/ViewTaskModal\";\r\n\r\nconst Calendar = ({allTasks: tasks, updateTask}) => {\r\n    const events = tasks.map(({id, name, dueDate, priority}) => ({\r\n        id,\r\n        title: name,\r\n        start: moment(dueDate).format('YYYY-MM-DD'),\r\n        allDay: true,\r\n        backgroundColor: priority === 1 ? '#db2828' : (priority === 2 ? '#fbbd08' : '#767676'),\r\n        borderColor: priority === 1 ? '#db2828' : (priority === 2 ? '#fbbd08' : '#767676'),\r\n        priority\r\n    }));\r\n\r\n    const [openViewTaskId, setOpenViewTaskId] = useState(false);\r\n    const openViewTask = openViewTaskId ? tasks.find(t => t.id === openViewTaskId) : false;\r\n\r\n    const [openEditTaskId, setOpenEditTaskId] = useState(false);\r\n    const openEditTask = openEditTaskId ? tasks.find(t => t.id === openEditTaskId) : false;\r\n\r\n    return (\r\n        <Container>\r\n            <Container text>\r\n                <Header as='h1'>Calendar</Header>\r\n            </Container>\r\n            <Container>\r\n                {openViewTask && (\r\n                    <ViewTaskModal\r\n                        task={openViewTask}\r\n                        onCloseClicked={() => setOpenViewTaskId(false)}\r\n                        onEditClicked={() => {\r\n                            setOpenViewTaskId(false);\r\n                            setOpenEditTaskId(openViewTaskId);\r\n                        }}\r\n                    />\r\n                )}\r\n                {openEditTask && (\r\n                    <EditTaskModal\r\n                        task={openEditTask}\r\n                        updateTask={updateTask}\r\n                        onCloseClicked={() => setOpenEditTaskId(false)}\r\n                    />\r\n                )}\r\n                <FullCalendar\r\n                    id = \"your-custom-ID\"\r\n                    header = {{\r\n                        left: 'prev,next today',\r\n                        center: 'title',\r\n                        right: 'month,basicWeek,basicDay'\r\n                    }}\r\n                    defaultView='basicWeek'\r\n                    navLinks={true} // can click day/week names to navigate views\r\n                    editable={false}\r\n                    eventLimit={false} // allow \"more\" link when too many events\r\n                    eventClick={({id}) => {setOpenViewTaskId(id)}}\r\n                    events = {events}\r\n                    eventOrder=\"priority,title\"\r\n                />\r\n            </Container>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default WithTasks(Calendar);\r\n"]},"metadata":{},"sourceType":"module"}