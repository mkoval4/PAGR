{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\gmaks\\\\Desktop\\\\project\\\\hci-pagr.github.io\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\Users\\\\gmaks\\\\Desktop\\\\project\\\\hci-pagr.github.io\\\\src\\\\containers\\\\data\\\\WithDoctors.js\";\nimport React from \"react\";\nimport faker from \"faker\";\nimport { random as randomHospital } from \"./WithHospitals\";\nvar loaded = false;\nvar doctorList = [];\nvar nextDoctorId = 0;\nvar localstorageKey = 'doctor-data';\nvar dataVersion = 2;\n\nvar generate = function generate() {\n  var doctor = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  nextDoctorId += 1;\n  return _objectSpread({\n    id: nextDoctorId,\n    name: nextDoctorId === 1 ? \"N/A\" : faker.name.firstName() + ' ' + faker.name.lastName(),\n    email: nextDoctorId === 1 ? \"N/A\" : faker.internet.email(),\n    hospital: nextDoctorId === 1 ? \"N/A\" : randomHospital().name,\n    office: nextDoctorId === 1 ? \"N/A\" : 'Office ' + faker.random.arrayElement([1, 2, 3, 4, 5, 6, 7, 8, 9, 0]) + faker.random.arrayElement([1, 2, 3, 4, 5, 6, 7, 8, 9, 0]) + faker.random.arrayElement(['A', 'B', 'C', 'D'])\n  }, doctor);\n};\n\nvar seed = function seed() {\n  for (var i = 0; i < 5; i++) {\n    doctorList.push(generate());\n  }\n};\n\nvar saveState = function saveState() {\n  localStorage.setItem(localstorageKey, JSON.stringify({\n    dataVersion: dataVersion,\n    nextDoctorId: nextDoctorId,\n    doctorList: doctorList\n  }));\n};\n\nvar loadDoctorData = function loadDoctorData() {\n  if (loaded) {\n    return;\n  }\n\n  if (localStorage.getItem(localstorageKey)) {\n    var _JSON$parse = JSON.parse(localStorage.getItem(localstorageKey)),\n        lsDataVersion = _JSON$parse.dataVersion,\n        lsNextDoctorId = _JSON$parse.nextDoctorId,\n        lsDoctorList = _JSON$parse.doctorList;\n\n    if (dataVersion === lsDataVersion) {\n      loaded = true;\n      nextDoctorId = lsNextDoctorId;\n      doctorList = lsDoctorList;\n      return;\n    }\n  }\n\n  seed();\n  saveState();\n  loaded = true;\n};\n\nvar WithDoctors = function WithDoctors(WrappedComponent) {\n  loadDoctorData();\n  return function (props) {\n    return React.createElement(WrappedComponent, Object.assign({}, props, {\n      doctors: doctorList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }));\n  };\n};\n\nexport var random = function random() {\n  loadDoctorData();\n  return faker.random.arrayElement(doctorList);\n};\nexport default WithDoctors;","map":{"version":3,"sources":["C:\\Users\\gmaks\\Desktop\\project\\hci-pagr.github.io\\src\\containers\\data\\WithDoctors.js"],"names":["React","faker","random","randomHospital","loaded","doctorList","nextDoctorId","localstorageKey","dataVersion","generate","doctor","id","name","firstName","lastName","email","internet","hospital","office","arrayElement","seed","i","push","saveState","localStorage","setItem","JSON","stringify","loadDoctorData","getItem","parse","lsDataVersion","lsNextDoctorId","lsDoctorList","WithDoctors","WrappedComponent","props"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport faker from \"faker\";\r\nimport {random as randomHospital} from \"./WithHospitals\";\r\n\r\nlet loaded = false;\r\nlet doctorList = [];\r\nlet nextDoctorId = 0;\r\n\r\nconst localstorageKey = 'doctor-data';\r\n\r\nconst dataVersion = 2;\r\n\r\nconst generate = (doctor = {}) => {\r\n    nextDoctorId += 1;\r\n    return {\r\n            id: nextDoctorId,\r\n            name: nextDoctorId === 1 ? \"N/A\" : faker.name.firstName() + ' ' + faker.name.lastName(),\r\n            email: nextDoctorId === 1 ? \"N/A\" :faker.internet.email(),\r\n            hospital: nextDoctorId === 1 ? \"N/A\" :randomHospital().name,\r\n            office: nextDoctorId === 1 ? \"N/A\" : 'Office ' + faker.random.arrayElement([1, 2, 3, 4, 5, 6, 7, 8, 9, 0])+ faker.random.arrayElement([1, 2, 3, 4, 5, 6, 7, 8, 9, 0]) + faker.random.arrayElement(['A', 'B', 'C', 'D']),\r\n            ...doctor\r\n    };\r\n};\r\n\r\nconst seed = () => {\r\n    for (let i = 0; i < 5; i++) {\r\n        doctorList.push(generate());\r\n    }\r\n};\r\n\r\nconst saveState = () => {\r\n    localStorage.setItem(localstorageKey, JSON.stringify({\r\n        dataVersion,\r\n        nextDoctorId,\r\n        doctorList\r\n    }))\r\n};\r\n\r\nconst loadDoctorData = () => {\r\n    if (loaded) {\r\n        return;\r\n    }\r\n\r\n    if (localStorage.getItem(localstorageKey)) {\r\n        const {\r\n            dataVersion: lsDataVersion,\r\n            nextDoctorId: lsNextDoctorId,\r\n            doctorList: lsDoctorList\r\n        } = JSON.parse(localStorage.getItem(localstorageKey))\r\n\r\n        if (dataVersion === lsDataVersion) {\r\n            loaded = true;\r\n            nextDoctorId = lsNextDoctorId;\r\n            doctorList = lsDoctorList;\r\n            return;\r\n        }\r\n    }\r\n\r\n    seed();\r\n    saveState();\r\n    loaded = true;\r\n};\r\n\r\nconst WithDoctors = (WrappedComponent) => {\r\n    loadDoctorData();\r\n\r\n    return props => (\r\n        <WrappedComponent {...props} doctors={doctorList} />\r\n    )\r\n}\r\n\r\nexport const random = () => {\r\n    loadDoctorData();\r\n\r\n    return faker.random.arrayElement(doctorList);\r\n}\r\n\r\nexport default WithDoctors;\r\n"]},"metadata":{},"sourceType":"module"}