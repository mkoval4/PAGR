{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\gmaks\\\\Desktop\\\\project\\\\hci-pagr.github.io\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\gmaks\\\\Desktop\\\\project\\\\hci-pagr.github.io\\\\src\\\\components\\\\tasks\\\\AddTaskModal.js\";\nimport React, { useState } from 'react';\nimport { Grid, Input, Modal, Form, Label, TextArea, Button, Icon } from \"semantic-ui-react\";\nimport WithDoctors from \"../../containers/data/WithDoctors\";\n\nvar AddTaskModal = function AddTaskModal(_ref) {\n  var onCloseClicked = _ref.onCloseClicked,\n      addTask = _ref.addTask,\n      doctors = _ref.doctors;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      description = _useState4[0],\n      setDescription = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      dueDate = _useState6[0],\n      setDueDate = _useState6[1];\n\n  var _useState7 = useState(1),\n      _useState8 = _slicedToArray(_useState7, 2),\n      priority = _useState8[0],\n      setPriority = _useState8[1];\n\n  var _useState9 = useState(doctors[0].name),\n      _useState10 = _slicedToArray(_useState9, 2),\n      doctor = _useState10[0],\n      setDoctor = _useState10[1];\n\n  var canSave = name.length > 0 && description.length > 0 && dueDate.length > 0;\n  return React.createElement(Modal, {\n    open: true,\n    centered: true,\n    onClose: onCloseClicked,\n    closeOnDimmerClick: false,\n    closeIcon: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(Modal.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Add New Task\"), React.createElement(Modal.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(Grid.Row, {\n    columns: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(Input, {\n    label: \"Task\",\n    labelPosition: \"left\",\n    type: \"text\",\n    onChange: function onChange(e, _ref2) {\n      var value = _ref2.value;\n      return setName(value);\n    },\n    value: name,\n    required: true,\n    fluid: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  })), React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(Input, {\n    label: \"Due Date\",\n    labelPosition: \"left\",\n    type: \"date\",\n    onChange: function onChange(e, _ref3) {\n      var value = _ref3.value;\n      return setDueDate(value);\n    },\n    value: dueDate,\n    required: true,\n    fluid: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }))), React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Description\"), React.createElement(TextArea, {\n    onChange: function onChange(e, _ref4) {\n      var value = _ref4.value;\n      return setDescription(value);\n    },\n    value: description,\n    required: true,\n    rows: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }))), React.createElement(Grid.Column, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(Form.Select, {\n    label: \"Request for Assistance\",\n    labelPosition: \"left\",\n    fluid: true,\n    onChange: function onChange(e, _ref5) {\n      var value = _ref5.value;\n      return setDoctor(value);\n    },\n    value: doctor,\n    options: doctors.map(function (_ref6) {\n      var id = _ref6.id,\n          name = _ref6.name;\n      return {\n        text: name,\n        value: name,\n        key: id\n      };\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  })), React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(Form.Select, {\n    label: \"Priority\",\n    labelPosition: \"left\",\n    fluid: true,\n    onChange: function onChange(e, _ref7) {\n      var value = _ref7.value;\n      return setPriority(parseInt(value));\n    },\n    value: priority,\n    options: [{\n      text: 'High',\n      value: 1,\n      key: 1\n    }, {\n      text: 'Medium',\n      value: 2,\n      key: 2\n    }, {\n      text: 'Low',\n      value: 3,\n      key: 2\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }))))))), React.createElement(Modal.Actions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(Button, {\n    disabled: !canSave,\n    primary: true,\n    onClick: function onClick() {\n      addTask({\n        name: name,\n        description: description,\n        dueDate: dueDate,\n        priority: priority,\n        doctor: doctor,\n        assignedDate: new Date()\n      });\n      onCloseClicked();\n    },\n    size: \"large\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    name: \"save outline\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }), \"Save\")));\n};\n\nexport default WithDoctors(AddTaskModal);","map":{"version":3,"sources":["C:\\Users\\gmaks\\Desktop\\project\\hci-pagr.github.io\\src\\components\\tasks\\AddTaskModal.js"],"names":["React","useState","Grid","Input","Modal","Form","Label","TextArea","Button","Icon","WithDoctors","AddTaskModal","onCloseClicked","addTask","doctors","name","setName","description","setDescription","dueDate","setDueDate","priority","setPriority","doctor","setDoctor","canSave","length","e","value","map","id","text","key","parseInt","assignedDate","Date"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\n\r\nimport {Grid, Input, Modal, Form, Label, TextArea, Button, Icon} from \"semantic-ui-react\";\r\nimport WithDoctors from \"../../containers/data/WithDoctors\";\r\n\r\nconst AddTaskModal = ({onCloseClicked, addTask, doctors}) => {\r\n    const [name, setName] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [dueDate, setDueDate] = useState('');\r\n    const [priority, setPriority] = useState(1);\r\n    const [doctor, setDoctor] = useState(doctors[0].name);\r\n    const canSave = name.length > 0 && description.length > 0 && dueDate.length > 0\r\n    return (\r\n        <Modal\r\n            open\r\n            centered\r\n            onClose={onCloseClicked}\r\n            closeOnDimmerClick={false}\r\n            closeIcon\r\n        >\r\n            <Modal.Header>\r\n                Add New Task\r\n            </Modal.Header>\r\n            <Modal.Content>\r\n                <Form>\r\n                    <Grid>\r\n                        <Grid.Row columns={3}>\r\n                            <Grid.Column>\r\n                                <Form.Field>\r\n                                    <Input label='Task' labelPosition='left' type='text' onChange={(e, {value}) => setName(value)} value={name} required fluid />\r\n                                </Form.Field>\r\n                                <Form.Field>\r\n                                    <Input label='Due Date' labelPosition='left' type='date' onChange={(e, {value}) => setDueDate(value)} value={dueDate} required fluid />\r\n                                </Form.Field>\r\n                            </Grid.Column>\r\n                            <Grid.Column>\r\n                                <Form.Field>\r\n                                    <Label>Description</Label>\r\n                                    <TextArea onChange={(e, {value}) => setDescription(value)} value={description} required rows={4} />\r\n                                </Form.Field>\r\n                            </Grid.Column>\r\n                            <Grid.Column>\r\n                                <Form.Field>\r\n                                    <Form.Select\r\n                                        label='Request for Assistance'\r\n                                        labelPosition='left'\r\n                                        fluid\r\n                                        onChange={(e, {value}) => setDoctor(value)}\r\n                                        value={doctor}\r\n                                        options={doctors.map(({id, name}) => ({text: name, value: name, key: id}))}\r\n                                    >\r\n                                    </Form.Select>\r\n                                </Form.Field>\r\n                                <Form.Field>\r\n                                    <Form.Select\r\n                                        label='Priority'\r\n                                        labelPosition='left'\r\n                                        fluid\r\n                                        onChange={(e, {value}) => setPriority(parseInt(value))}\r\n                                        value={priority}\r\n                                        options={[\r\n                                            {text: 'High', value: 1, key: 1},\r\n                                            {text: 'Medium', value: 2, key: 2},\r\n                                            {text: 'Low', value: 3, key: 2},\r\n                                        ]}\r\n                                    >\r\n                                    </Form.Select>\r\n                                </Form.Field>\r\n\r\n\r\n\r\n\r\n                            </Grid.Column>\r\n                        </Grid.Row>\r\n                    </Grid>\r\n                </Form>\r\n            </Modal.Content>\r\n\r\n            <Modal.Actions>\r\n                <Button disabled={!canSave} primary onClick={() => {\r\n                    addTask({name, description, dueDate, priority, doctor, assignedDate: new Date()});\r\n                    onCloseClicked();\r\n                }} size='large'>\r\n                    <Icon name='save outline'/>\r\n                    Save\r\n                </Button>\r\n            </Modal.Actions>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default WithDoctors(AddTaskModal);\r\n"]},"metadata":{},"sourceType":"module"}